# docker-compose.yml
version: "3.7"
services:
    pgsql:
      image: postgres:9.6
      container_name: sf4-pgsql
      ports:
        - "5433:5432"
      volumes:
        - ./data/pgsql:/var/lib/postgresql
      environment:
        POSTGRES_USER: pgusr
        POSTGRES_PASSWORD: pgpwd
        POSTGRES_DB: pgdb
    #sf4-nginx:
      #image: nginx:alpine
      #container_name: sf4-nginx
      #working_dir: /application
      #ports:
       #- "8000:80"
      #volumes:
          #- .:/application
          #- ./phpdocker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    sf4-php-apache:
      build: phpdocker/apache
      container_name: sf4-php-apache
      working_dir: /application
      volumes:
        - .:/application
      depends_on:
        - sf4-php-fpm
      ports:
        - "8000:80"
    sf4-php-fpm:
      build: phpdocker/php-fpm
      container_name: sf4-php-fpm
      working_dir: /application
      volumes:
        - .:/application
        - ./phpdocker/php-fpm/php-ini-overrides.ini:/etc/php/7.3/fpm/conf.d/99-overrides.ini
    elasticsearch:
      image: docker.elastic.co/elasticsearch/elasticsearch:6.2.2
      container_name: elasticsearch
      environment:
        - bootstrap.memory_lock=true
        - xpack.security.enabled=false
        - "ES_JAVA_OPTS=-Xms128m -Xmx128m"
      ulimits:
        memlock:
          soft: -1
          hard: -1
      volumes:
        - ./storage/docker/elasticsearch:/usr/share/elasticsearch/data
        - ./phpdocker/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      ports:
        - "9201:9200"
    database:
      image: postgres:${POSTGRES_VERSION:-13}-alpine
      environment:
        POSTGRES_DB: ${POSTGRES_DB:-app}
        # You should definitely change the password in production
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ChangeMe}
        POSTGRES_USER: ${POSTGRES_USER:-symfony}
      volumes:
        - db-data:/var/lib/postgresql/data:rw
        # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
        # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###
volumes:
###> doctrine/doctrine-bundle ###
  db-data:
###< doctrine/doctrine-bundle ###
